{"version":3,"sources":["components/Header/index.js","components/Warn/index.js","components/Loading/index.js","utils/api.js","components/SearchCard/index.js","components/Narrative/index.js","components/Results/index.js","pages/main/index.js","components/Login/index.js","pages/login/index.js","App.js","index.js"],"names":["myNav","props","console","log","Navbar","Brand","style","flex","username","ButtonToolbar","ButtonGroup","className","table","filename","buttonText","Button","variant","onClick","event","preventDefault","axios","post","then","response","data","status","updateUser","loggedIn","window","location","reload","catch","error","WarnDiv","Card","id","display","color","warnDisplay","children","Loading","Spinner","animation","loadingDisplay","runSearch","date","a","fetch","search","Error","json","warn","deleteSearch","SearchCard","useState","setDate","setWarnDisplay","setLoadingDisplay","update","target","index","parseInt","getAttribute","value","length","API","join","result","undefined","getPosts","type","data-index","placeholder","onChange","Warn","Narrative","Results","mapPosts","currentPosts","map","currentPost","Date","toISOString","substring","key","_id","confirmed","toLocaleString","deaths","recovered","err","Table","striped","bordered","hover","Main","Header","LoginForm","React","state","setState","history","useHistory","useEffect","push","background","justifyContent","alignItems","e","loginUser","LoginPage","Login","userid","App","posts","getUser","get","user","name","method","headers","body","JSON","stringify","res","this","pageShown","isLoggedIn","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e251a816.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport HtmlToExcel from 'react-html-table-to-excel'\nimport Navbar from 'react-bootstrap/Navbar'\n\n// props here are from App // Main\n\nfunction myNav (props) {\n    console.log(props);\n    \n    function logOut (event) {\n        event.preventDefault()\n        console.log('logging out')\n        axios.post('/logout').then(response => {\n          console.log(response.data)\n          if (response.status === 200) {\n            props.updateUser({\n              loggedIn: false,\n              username: null\n            })     \n        }\n        })\n        .then(\n            window.location.reload()\n        )\n        .catch(error => {\n            console.log('Logout error')\n        })\n      }\n    \n    // function copyTable () {\n    //     console.log('copied!')\n    //     const urlField = document.getElementById('table')\n    //     const range = document.createRange()\n    //     range.selectNode(urlField)\n    //     window.getSelection().addRange(range)\n    //     document.execCommand('copy')\n    // }\n\n        return (\n            <Navbar>\n                <Navbar.Brand style={{ flex: 1 }}>\n                    <h3><strong>Precision19</strong></h3>\n                    <h5>Welcome, {props.username}</h5>\n                   \n                    \n                </Navbar.Brand>\n                <ButtonToolbar>\n                    {/* <ButtonGroup className=\"mr-2\">\n                        <Button variant=\"info\" className='btn-sm' onClick={copyTable}>\n                            Copy Table\n                        </Button>\n                    </ButtonGroup> */}\n                    <ButtonGroup className=\"mr-2\">\n                        <HtmlToExcel \n                            table=\"table\"\n                            filename={`data_export_${props.username}`}\n                            buttonText=\"Download\"\n                            className=\"btn btn-dark btn-sm\"\n                        />\n                    </ButtonGroup>\n                    <ButtonGroup>\n                        <Button variant=\"danger\" className='btn-sm' onClick={logOut}>\n                            Log Out\n                        </Button>\n                    </ButtonGroup>\n                </ButtonToolbar>\n            </Navbar>\n        )\n}\n\nexport default myNav","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nfunction WarnDiv (props) {\n    return (\n        <Card id='warn' style={{display: \"block\"}}>\n            <p className='card-text' \n            style={\n                { \n                    color: '#ffdd00',\n                    display: props.warnDisplay ? props.warnDisplay : \"none\" \n                }\n            }>\n                {props.children}\n            </p>\n        </Card>\n    )\n}\n\nexport default WarnDiv","import React from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\n\n// loading takes a prop from it's current container, either the results or login components\n\nfunction Loading (props) {\n    return (\n        <Spinner \n            animation=\"border\" \n            variant=\"light\" \n            style={\n                { display: props.loadingDisplay ? props.loadingDisplay : \"none\" }\n            }\n        />\n    )\n}\n\nexport default Loading","import React from 'react'\nimport axios from 'axios'\n\n\nexport default {\n    runSearch: async (date) => {\n        try {\n            const search = await fetch(\"/api/covid?date=\" + date)\n            if (search.status !== 200) throw new Error(\"Unsuccesssful\");\n\n            const data = await search.json();\n            return data\n        } catch (error) {\n            console.warn(error)\n        }\n    },\n\n    deleteSearch: (id) => {\n        \n        return axios.post('/posts/delete/' + id)\n    },\n    \n}","import React, { useState } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Warn from '../Warn'\nimport Loading from '../Loading'\nimport Button from 'react-bootstrap/Button'\nimport API from '../../utils/api'\n\nfunction SearchCard(props) {\n    const [date, setDate] = useState([\"2020\", \"08\", \"22\"]);\n    const [warnDisplay, setWarnDisplay] = useState(false)\n    const [loadingDisplay, setLoadingDisplay] = useState(false)\n\n    const update = ({ target }) => {\n        const index = parseInt(target.getAttribute(\"data-index\"))\n        const value = target.value.length === 2 ? target.value : \"0\" + target.value;\n\n        date[index] = value;\n\n        setDate(date);\n    }\n\n    const search = async () => {\n        setLoadingDisplay(true)\n        try {\n            const result = await API.runSearch(date.join(\"-\"))\n            console.log(result)\n            if (result === undefined) {\n                setLoadingDisplay(false)\n                setWarnDisplay(true)\n            } else {\n                setLoadingDisplay(false)\n                setWarnDisplay(false)\n                props.getPosts()\n            }\n        } catch (error) {\n            setLoadingDisplay(false)\n            console.warn(error)\n        }\n    }\n\n    return (\n        <div>\n            <Card>\n                <div className='form-group'>\n                    <input className='form-control' type=\"number\" data-index=\"1\" placeholder='Month (#)' onChange={update}></input>\n                </div>\n                <div className='form-group'>\n                    <input className='form-control' type=\"number\" data-index=\"2\" placeholder='Day (#)' onChange={update}></input>\n                </div>\n                <div className=\"form-group\">\n                        <select className=\"form-control\" type=\"number\" data-index=\"0\" placeholder='Year (#)' onChange={update}>\n                        <option>2020</option>\n                    </select>\n                </div>\n                <Warn warnDisplay={warnDisplay}>Please use a valid date</Warn>\n                <Loading loadingDisplay={loadingDisplay} />\n                <Button className='btn btn-primary btn-sm' onClick={search} id='submit-glob-tot'>Go</Button>\n            </Card>\n        </div>\n    )\n}\n\nexport default SearchCard","import React from 'react'\nimport Card from 'react-bootstrap/Card'\n\nfunction Narrative() {\n    return (\n        <div>\n            <Card>\n                <p>\n                    <h4><strong>For precision research on COVID-19.</strong>\n                    </h4>\n                </p>\n                <p>\n                    Comensurate with the scale of the catastrophy that is the COVID-19 pandemic, the volume of data generated is staggering. This is a tool for users undertaking specific, targeted research.\n                </p>\n                <p>\n                    By entering the month, day, and year, and clicking \"Go,\" Johns Hopkins global data for that date will be returned in the chart to the right.\n                </p>\n                <p>\n                    Download your data to an Excel file by clicking the \"Download\" button on the navigation bar.\n                </p>\n                <p>\n                    <strong>PLEASE NOTE:</strong> the first day for which Johns Hopkins has data available is Jan 22, 2020.\n                </p>\n            </Card>\n        </div>\n    )\n}\n\nexport default Narrative","import React from 'react';\nimport API from '../../utils/api'\nimport Table from 'react-bootstrap/Table'\n\nfunction Results (props) {\n\n    function _delete(id) {\n        API.deleteSearch(id)\n          .then(props.getPosts)\n          .catch(err => console.log(err));\n      }\n\n    const currentPosts = props.currentPosts\n    let mapPosts\n    if (currentPosts) {\n        console.log(currentPosts);\n        mapPosts = currentPosts.map(currentPost => {\n            let date = new Date(currentPost.date).toISOString().substring(0, 10)\n            return (\n            <tr key={currentPost._id}>\n                <td>\n                    {date}\n                </td>\n                <td>\n                    {currentPost.confirmed.toLocaleString()}\n\n                </td>\n                <td>\n                    {currentPost.deaths.toLocaleString()}\n                </td>\n                <td>\n                    {currentPost.recovered.toLocaleString()}\n                </td>\n                <td >\n                    <button className='btn btn-warning btn-sm' onClick={() => _delete(currentPost._id)}>\n                        Delete\n                    </button>\n                </td>\n            </tr>\n            )\n        }) \n    }\n\n\n    \n    return (\n    <div>\n        <Table id={'table'} striped bordered hover >\n            <thead>\n                <tr>\n                <th>\n                    Date\n                </th>\n                <th>\n                    Global Confirmed\n                </th>\n                <th>\n                    Global Deaths\n                </th>\n                <th>\n                    Global Recovered\n                </th>\n                <th>\n                    Remove Search\n                </th>\n                </tr>\n            </thead>\n            <tbody>\n                {mapPosts}\n            </tbody>\n        </Table>\n    </div>\n    )\n\n}\n\nexport default Results        ","import React, { useState } from 'react';\nimport Header from '../../components/Header'\nimport SearchCard from '../../components/SearchCard'\nimport Narrative from '../../components/Narrative'\nimport Results from '../../components/Results'\n\nfunction Main(props) {\n  return (\n    <div>\n      <Header username={props.username} />\n      <div className=\"container\">\n        <div className=\"row\">\n        <Narrative />\n        </div>\n        {/* this is the main body row that holds both the search form and results */}\n        <div className=\"row\" id=\"main\">\n          <div className=\"col-md-3\">\n            <SearchCard getPosts={props.getPosts}/>\n          </div>\n          <div className=\"col-md-9\">\n            <Results getPosts={props.getPosts} currentPosts={props.currentPosts} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction LoginForm(props) {\n    const [state, setState] = React.useState(\"\");\n    const history = useHistory();\n\n    React.useEffect(() => {\n        if (props.loggedIn) history.push(\"/\")\n    }, [props.loggedIn])\n\n    return (\n        <div className='container'>\n            <div className='jumbotron' style={{ background: 'none' }}>\n                <div className='row'>\n                    <div className='col'></div>\n                    <div className='col-md-6'>\n                        <Card  style={{ justifyContent: 'center', alignItems: 'center' }}>\n                            <div className='card-header'>\n                                <h3>\n                                    <strong>\n                                        Precision19\n                                    </strong>\n                                </h3>\n                            </div>\n                            <div className='card-body'>\n                                <p>\n                                    A targeted resource for researchers\n                                </p>\n                            </div>\n                            <div className=\"form-group\">\n                                <input className='form-control' type=\"text\" placeholder=\"username\" onChange={e => setState(e.target.value)} ></input>\n                            </div>\n                            <div className='form-group'>\n                                <Button type=\"submit\" className='btn btn-sm btn-secondary' onClick={() => props.loginUser(state)}>Log In</Button>\n                            </div>\n                        </Card>\n                    </div>\n                    <div className='col'></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginForm","import React from 'react'\nimport Login from '../../components/Login'\n\nfunction LoginPage(props) {\n\n    return <Login\n        loginUser={props.loginUser}\n        loggedIn={props.loggedIn}\n        username={props.username}\n        userid={props.userid}\n    />\n}\n\nexport default LoginPage\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport Main from './pages/main';\nimport Login from './pages/login'\n\n\nclass App extends Component {\n\n  state = {\n    loggedIn: false,\n    username: null,\n    userid: null,\n    posts: null,\n    currentPosts: null\n  }\n\n  // when App loads, run getUser function which will perform a get and set the state to the user if there's a session in progress\n  componentDidMount() {\n    this.getUser()\n  }\n\n  updateUser(state) {\n    this.setState(state)\n  }\n\n  getUser = () => {\n    axios\n    .get('/user')\n    .then(response => {\n      console.log('Get user response: ')\n      console.log(response)\n      if (response.data.user) {\n        console.log('Get User: There is a user saved in the server session: ')\n        console.log(response.data.user);\n\n        this.setState({\n          loggedIn: true,\n          username: response.data.user,\n          userid: response.data.id,\n          posts: response.data.posts\n\n        })\n        this.getPosts()\n      } else {\n        console.log('Get user: no user');\n        this.setState({\n          loggedIn: false,\n          username: null,\n          userid: null\n        })\n      }\n    })\n  }\n\n  getPosts = () => {\n    axios\n      .get('/posts')\n      .then(response => {\n        this.setState({\n          currentPosts: response.data\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  loginUser = (name) => {\n    console.log(name)\n\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ username: name })\n    })\n      .then(res => res.json())\n      .then(res => this.setState({ loggedIn: true, username: res.username, userid: res._id }))\n      .then(this.updateUser)\n      .then(this.getUser)\n      .then(window.location.reload())\n      .catch(err => console.log(err))\n  }\n  \n  render() {\n    const isLoggedIn = this.state.loggedIn\n    let pageShown\n    console.log(this.state)\n\n    if (isLoggedIn) {\n      pageShown = <Main \n        loggedIn={this.state.loggedIn} \n        username={this.state.username} \n        userid={this.state.userid}\n        posts={this.state.posts}\n        currentPosts={this.state.currentPosts}\n        getPosts={this.getPosts}\n        updateUser={this.updateUser} \n        />\n    } else {\n      pageShown = <Login \n        loggedIn={this.state.loggedIn} \n        username={this.state.username} \n        userid={this.state.userid} \n        loginUser={this.loginUser} \n      />\n    }\n    return (\n      <div>\n        {pageShown}\n      </div>\n    );\n  }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}